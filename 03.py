import numpy as np

from math import factorial

# 1.Даны значения зарплат из выборки выпускников: 100, 80, 75, 77, 89, 33, 45, 25, 65, 17, 30, 24, 57, 55, 70, 75, 65, 84, 90, 150.
# Посчитать(желательно без использования статистических методов наподобие std, var, mean) среднее арифметическое,
# среднее квадратичное отклонение, смещенную и несмещенную оценки дисперсий для данной выборки.

arr = np.array([100, 80, 75, 77, 89, 33, 45, 25, 65, 17,
               30, 24, 57, 55, 70, 75, 65, 84, 90, 150])


def sr_ar(array):
    return sum(array)/len(array)


print('Задание 1')
print(sr_ar(arr))


def dispersy(array, flag):
    sr_kv = (array-sr_ar(arr))**2
    if flag:
        return (sum(sr_kv)/len(array))
    if flag == False:
        return (sum(sr_kv)/(len(array)-1))


print(dispersy(arr, True)**(1/2))
print(dispersy(arr, True))
print(dispersy(arr, False))

# 2. В первом ящике находится 8 мячей, из которых 5 - белые. Во втором ящике - 12 мячей, из которых 5 белых.
# Из первого ящика вытаскивают случайным образом два мяча, из второго - 4. Какова вероятность того, что 3 мяча белые?


def combinations(n, k):
    return factorial(n) // (factorial(k)*factorial(n-k))


print('Задание 2')
print((combinations(3, 2)/combinations(8, 2))*(combinations(5, 3)*combinations(7, 1)/combinations(12, 4))+(combinations(5, 1)*combinations(3, 1)*combinations(5, 2)
      * combinations(7, 2))/(combinations(8, 2)*combinations(12, 4))+(combinations(5, 2)*combinations(5, 1)*combinations(7, 3))/(combinations(8, 2)*combinations(12, 4)))

# 3.На соревновании по биатлону один из трех спортсменов стреляет и попадает в мишень. Вероятность попадания для первого спортсмена равна 0.9, для второго — 0.8, для третьего — 0.6.
# Найти вероятность того, что выстрел произведен:

pa = (0.9+0.8+0.6)/3

print('Задание 3')
# a). первым спортсменом
print(((1/3)*0.9)/pa)
# б). вторым спортсменом
print(((1/3)*0.8)/pa)
# в). третьим спортсменом.
print(((1/3)*0.6)/pa)

# 4. В университет на факультеты A и B поступило равное количество студентов, а на факультет C студентов поступило столько же, сколько на A и B вместе.
# Вероятность того, что студент факультета A сдаст первую сессию, равна 0.8. Для студента факультета B эта вероятность равна 0.7, а для студента факультета C - 0.9.
# Студент сдал первую сессию. Какова вероятность, что он учится:

pp = (0.8+0.7+(2*0.9))/2

print('Задание 4')
# a). на факультете A
print(((1/2)*0.8)/pp)
# б). на факультете B
print(((1/2)*0.7)/pp)
# в). на факультете C?
print(((1/2)*2*0.9)/pp)

# 5.Устройство состоит из трех деталей. Для первой детали вероятность выйти из строя в первый месяц равна 0.1, для второй - 0.2, для третьей - 0.25. 
# Какова вероятность того, что в первый месяц выйдут из строя:
print('Задание 5')
# а). все детали
print(0.1*0.2*0.25)
# б). только две детали
print(0.1*0.2*0.75+0.1*0.8*0.25+0.9*0.2*0.25)
# в). хотя бы одна деталь
print(1 - 0.9*0.8*0.75)
# г). от одной до двух деталей?
print((0.1*0.8*0.75+0.9*0.2*0.75+0.9*0.8*0.25)+(0.1*0.2*0.75+0.1*0.8*0.25+0.9*0.2*0.25))

