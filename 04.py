from scipy import stats

# 1. 1) Случайная непрерывная величина A имеет равномерное распределение на промежутке (200, 800].
# Найдите ее среднее значение и дисперсию.

print("Задание 1")
print("Среднее значение:", (200 + 800) / 2)
print("Дисперсия:", (200 - 800) ** 2 / 12)
print()

# 2. 2) О случайной непрерывной равномерно распределенной величине B известно, что ее дисперсия равна 0.2.
# Можно ли найти правую границу величины B и ее среднее значение зная, что левая граница равна 0.5?
# Если да, найдите ее.

print("Задание 2")
print("Правая граница:", 2.4 ** (1 / 2) + 0.5)
print("Среднее значение:", (0.5 + (2.4 ** (1 / 2) + 0.5)) / 2)
print()

# 3. 3) Непрерывная случайная величина X распределена нормально и задана плотностью распределения
# f(x) = (1 / (4 * sqrt(2pi))) * exp((-(x+2)**2) / 32)
# Найдите:
# а). M(X)

print("Задание 3")
print("M(X) =", -2)

# б). D(X)

print("D(X) =", 16)

# в). std(X) (среднее квадратичное отклонение)

print("std(X) =", 4)
print()

# 4. Рост взрослого населения города X имеет нормальное распределение.
# Причем, средний рост равен 174 см, а среднее квадратичное отклонение равно 8 см.
# Какова вероятность того, что случайным образом выбранный взрослый человек имеет рост:
# Оффтоп: почитал про scipy, ppf - это обратная функция, которая даст нам значение нормального распределения по заданной
# вероятности, а нам нужна была cdf, которая как раз вычисляет вероятность по распределению, вроде так.
print("Задание 4")
# а). больше 182 см
print("а)", 1 - stats.norm.cdf(182, loc=174, scale=8))
# б). больше 190 см
print("б)", 1 - stats.norm.cdf(190, loc=174, scale=8))
# в). от 166 см до 190 см
print("в)", stats.norm.cdf(190, loc=174, scale=8) - stats.norm.cdf(166, loc=174, scale=8))
# г). от 166 см до 182 см
print("г)", stats.norm.cdf(182, loc=174, scale=8) - stats.norm.cdf(166, loc=174, scale=8))
# д). от 158 см до 190 см
print("д)", stats.norm.cdf(190, loc=174, scale=8) - stats.norm.cdf(158, loc=174, scale=8))
# е). не выше 150 см или не ниже 190 см
print("е)", stats.norm.cdf(150, loc=174, scale=8) + 1 - stats.norm.cdf(190, loc=174, scale=8))
# ё). не выше 150 см или не ниже 198 см
print("ё)", stats.norm.cdf(150, loc=174, scale=8) + 1 - stats.norm.cdf(198, loc=174, scale=8))
# ж). ниже 166 см.
print("ж)", stats.norm.cdf(166, loc=174, scale=8))
print()

# 5. На сколько сигм (средних квадратичных отклонений) отклоняется рост человека, равный 190 см,
# от математического ожидания роста в популяции, в которой M(X) = 178 см и D(X) = 25 кв.см?

print("Задание 5")
print((190 - 178) / (25 ** (1 / 2)))
